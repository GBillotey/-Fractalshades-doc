
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/batch_mode/01-full_basic.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_batch_mode_01-full_basic.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_batch_mode_01-full_basic.py:


==================================
01 - Full Mandelbrot basic example
==================================

This basic example shows how to create a color layer, displaying the 
"continuous iteration number" for Mandelbrot (power 2) fractal.

The full Mandelbrot set is diplayed here.

Reference:
`fractalshades.models.Mandelbrot`

.. GENERATED FROM PYTHON SOURCE LINES 15-96



.. image-sg:: /examples/batch_mode/images/sphx_glr_01-full_basic_001.png
   :alt: 01 full basic
   :srcset: /examples/batch_mode/images/sphx_glr_01-full_basic_001.png
   :class: sphx-glr-single-img





.. code-block:: default

    import os

    import fractalshades as fs
    import fractalshades.models as fsm
    import fractalshades.colors as fscolors
    import fractalshades.projection

    from fractalshades.postproc import (
        Postproc_batch,
        Continuous_iter_pp,
        Raw_pp,
    )
    from fractalshades.colors.layers import (
        Color_layer,
        Bool_layer,
    )

    def plot(plot_dir):
        """
        A very simple example: full view of the Mandelbrot set with escape-time
        coloring
        """
        fs.settings.enable_multithreading = False
        fs.settings.log_directory = os.path.join(plot_dir, "log")
        fs.set_log_handlers(verbosity="debug @ console + log")
        # Define the parameters for this calculation
        x = -1.0
        y = -0.0
        dx = 5.
        nx = 2400
    
        calc_name="mandelbrot"
        colormap = fscolors.cmap_register["classic"]

        # Run the calculation
        f = fsm.Mandelbrot(plot_dir)
        f.zoom(x=x, y=y, dx=dx, nx=nx, xy_ratio=1.0,
               projection=fs.projection.Cartesian(),
               theta_deg=0.)
        f.calc_std_div(
            calc_name=calc_name,
            subset=None,
            max_iter=1000,
            M_divergence=1000.,
            epsilon_stationnary= 0.001,
        )

        # Plot the image
        pp = Postproc_batch(f, calc_name)
        pp.add_postproc("cont_iter", Continuous_iter_pp())
        pp.add_postproc("interior", Raw_pp("stop_reason", func="x != 1."))

        plotter = fs.Fractal_plotter(pp)
        plotter.add_layer(Bool_layer("interior", output=False))
        plotter.add_layer(Color_layer(
                "cont_iter",
                func="np.log(x)",
                colormap=colormap,
                probes_z=[1., 3.],
                output=True
        ))

        plotter["cont_iter"].set_mask(
                plotter["interior"],
                mask_color=(0.1, 0.1, 0.1)
        )

        plotter.plot()


    if __name__ == "__main__":
        # Some magic to get the directory for plotting: with a name that matches
        # the file or a temporary dir if we are building the documentation
        try:
            realpath = os.path.realpath(__file__)
            plot_dir = os.path.splitext(realpath)[0]
            plot(plot_dir)
        except NameError:
            import tempfile
            with tempfile.TemporaryDirectory() as plot_dir:
                fs.utils.exec_no_output(plot, plot_dir)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  5.407 seconds)


.. _sphx_glr_download_examples_batch_mode_01-full_basic.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 01-full_basic.py <01-full_basic.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 01-full_basic.ipynb <01-full_basic.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
